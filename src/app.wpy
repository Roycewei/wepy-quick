

<style lang="scss" src="./styles/base.scss"></style>


<script>
import wepy from 'wepy';
import 'wepy-async-function';

import { setStore } from 'wepy-redux';
import U from '@/utils/utils';
import configStore from './store';
import { TOKEN, EXPIRETOKEN } from './utils/storageKey';

const store = configStore();
setStore(store);

export default class APP extends wepy.app {
  config = {
    pages: ['pages/my/index', 'pages/home/index'],
    /**
     * 若需求页面过多，首页需要优化加载速度可以试试分包(tip:总包小于10M)
     * 配置如下，项目目录结构务必如下(tip:静态资源也能分离过去)
     */
    subPackages: [
      {
        root: 'subpages',
        pages: ['pages/homeB/index']
      }
    ],
    window: {
      backgroundTextStyle: 'light',
      backgroundColor: '#f5f5f5',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      selectedColor: '#000',
      color: '#A7A7A7',
      list: [
        {
          pagePath: 'pages/home/index',
          text: '首页',
          iconPath: 'images/home.png',
          selectedIconPath: 'images/home_active.png'
        },
        {
          pagePath: 'pages/my/index',
          text: '我',
          iconPath: 'images/me.png',
          selectedIconPath: 'images/me_active.png'
        }
      ]
    },
    networkTimeout: {
      request: 10000,
      downloadFile: 10000
    }
  };

  globalData = {
    appid: 'wx1234567',
    version: 'v0.0.1',
    // baseUrl: 'https://xxx.com' // 线上接口地址
    baseUrl: 'http://xxx/com' // 测试接口地址
  };

  constructor() {
    super();
    this.use('requestfix');
    this.use('promisify');

    // 拦截request请求
    this.intercept('request', {
      config(p) {
        return p;
      },
      success(p) {
        let { data, statusCode } = p;
        if (statusCode < 300 && statusCode >= 200) {
          return { code: 1, data };
        } else {
          if (data.code == 'xxx' || data.code == 'xxx') {
            wx.setStorageSync(TOKEN, '');
            wx.setStorageSync(EXPIRETOKEN, '');
            return { code: -999, desc: data.msg }; //去登录
          } else {
            return { code: -1, desc: data.msg };
          }
        }
        
        // 业务层级错误处理，以下是假定restful有一套统一输出格式（指不管成功与否都有相应的数据格式）情况下进行处理
        // 例如响应内容：
        //  错误内容：{ status: 1, msg: '非法参数' }
        //  正确内容：{ status: 0, response: {  } }
        // 则以下代码片断可直接适用
        // if (event instanceof HttpResponse) {
        //     const body: any = event.body;
        //     if (body && body.status !== 0) {
        //         this.msg.error(body.msg);
        //         // 继续抛出错误中断后续所有 Pipe、subscribe 操作，因此：
        //         // this.http.get('/').subscribe() 并不会触发
        //         return throwError({});
        //     } else {
        //         // 重新修改 `body` 内容为 `response` 内容，对于绝大多数场景已经无须再关心业务状态码
        //         return of(new HttpResponse(Object.assign(event, { body: body.response })));
        //         // 或者依然保持完整的格式
        //         return of(event);
        //     }
        // }
      },
      fail(p) {
        console.log('request fail: ', p);
        return p;
      },
      complete(p) {}
    });
  }

  /**
   * 启动项目时
   */
  async onLaunch(param) {
    console.log(
      '%c',
      "padding:50px 300px;line-height:150px;background:url('http://cdn.duitang.com/uploads/item/201410/27/20141027205515_RZ43x.gif') no-repeat;"
    );
    // 校验SDK
    U.checkSDK();
    // 同步开放平台EXT数据
    const ext = await wepy.getExtConfigSync();
    if (ext.globalConfig) {
      Object.assign(ext, ext.globalConfig);
    }
    Object.assign(wepy.$instance.globalData, ext);
    // 同步权限数据
    this.syncStoreConfig('scene');
    // 获取保存场景值
    if (param && param.scene) {
      wepy.$instance.globalData.scene = param.scene;
    }
  }
  async syncStoreConfig(key) {
    try {
      const value = await wepy.getStorageSync(key);
      if (value !== '') {
        console.info(`${key} sync success `);
        wepy.$instance.globalData.scene[key] = value;
      }
    } catch (e) {
      console.warn(`${key} sync fail `);
    }
  }
}
</script>

